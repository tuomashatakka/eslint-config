
const rules = {

  // 'block-padding/after-block':                     [ 'warn', 2 ],

  // @stylistic
  '@stylistic/jsx-quotes':                   [ 'warn', 'prefer-single' ],
  '@stylistic/jsx-newline':                  [ 'warn', { prevent: true, allowMultilines: true }],
  '@stylistic/jsx-props-no-multi-spaces':    [ 'warn' ],
  'react/no-unescaped-entities':             [ 'error', { forbid: [ '>', '}' ]}],
  'react/jsx-uses-vars':                     [ 'error' ],
  'react/jsx-uses-react':                    [ 'error' ],
  'react/style-prop-object':                 [ 'error', { allow: []}],
  'react/prefer-stateless-function':         [ 'error', { ignorePureComponents: false }],
  'react/no-invalid-html-attribute':         [ 'error', []],
  'react/hook-use-state':                    [ 'warn', { allowDestructuredState: false }],
  'react/jsx-one-expression-per-line':       [ 'warn', { allow: 'single-child' }],
  'react/jsx-no-useless-fragment':           [ 'warn', { allowExpressions: true }],
  'react/jsx-no-target-blank':               [ 'warn', { enforceDynamicLinks: 'always' }],
  'react/jsx-closing-bracket-location':      [ 'warn', 'line-aligned' ],
  'react/jsx-closing-tag-location':          [ 'warn', 'line-aligned' ],
  'react/jsx-equals-spacing':                [ 'warn', 'never' ],
  'react/jsx-first-prop-new-line':           [ 'warn', 'multiline' ],
  'react/jsx-indent':                        [ 'warn', 2, { checkAttributes: true, indentLogicalExpressions: true }],
  'react/jsx-indent-props':                  [ 'warn', 2 ],
  'react/jsx-max-props-per-line':            [ 'warn', { maximum: 1, when: 'multiline' }],
  '@stylistic/arrow-parens':                 [ 'warn', 'always' ],
  '@stylistic/dot-location':                 [ 'warn', 'property' ],
  '@stylistic/eol-last':                     [ 'warn', 'always' ],
  '@stylistic/multiline-ternary':            [ 'warn', 'always-multiline' ],
  '@stylistic/no-extra-semi':                [ 'warn' ],
  '@stylistic/no-floating-decimal':          [ 'warn' ],
  '@stylistic/no-mixed-operators':           [ 'warn' ],
  '@stylistic/semi-spacing':                 [ 'warn', { before: false, after: true }],
  '@stylistic/semi-style':                   [ 'warn', 'last' ],
  '@stylistic/semi':                         [ 'warn', 'never' ],
  '@stylistic/space-before-blocks':          [ 'warn', 'always' ],
  '@stylistic/space-before-function-paren':  [ 'warn', { anonymous: 'always', named: 'never', asyncArrow: 'always' }],
  '@stylistic/template-tag-spacing':         [ 'warn', 'never' ],
  '@stylistic/yield-star-spacing':           [ 'warn', 'after' ],
  'react/jsx-no-constructed-context-values': [ 'warn' ],
  'react/jsx-no-script-url':                 [ 'warn' ],
  'react/jsx-no-comment-textnodes':          [ 'warn' ],
  'react/jsx-no-duplicate-props':            [ 'warn' ],
  'react/jsx-no-undef':                      [ 'warn' ],
  'react/jsx-pascal-case':                   [ 'warn' ],
  'react/jsx-curly-brace-presence':          [ 'warn', { props: 'never', children: 'never' }],
  'react/jsx-curly-spacing':                 [ 'warn', { when: 'never', children: true }],
  '@stylistic/jsx-equals-spacing':           [ 'warn', 'never' ],
  '@stylistic/quotes':                       [ 'warn', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
  '@stylistic/jsx-indent-props':             [ 'warn', 2 ],
  '@stylistic/jsx-max-props-per-line':       [ 'warn', { maximum: 1, when: 'multiline' }],
  '@stylistic/jsx-self-closing-comp':        [ 'warn', { component: true, html: true }],
  '@stylistic/jsx-one-expression-per-line':  [ 'warn', { allow: 'single-child' }],
  '@stylistic/jsx-tag-spacing':              [ 'warn', { closingSlash: 'never', beforeSelfClosing: 'never', beforeClosing: 'never', afterOpening: 'never' }],
  'react/display-name':                      [ 'warn', { checkContextObjects: true }],

  // Comments
  'multiline-comment-style':         [ 'warn', 'separate-lines', { checkJSDoc: false }],
  '@stylistic/lines-around-comment': [ 'warn', { beforeBlockComment: true, beforeLineComment: true, afterLineComment: false, allowClassEnd: false, allowBlockEnd: false
  }],

  // TODO
  'import/no-extraneous-dependencies':      [ 'warn' ],
  'import/consistent-type-specifier-style': [ 'warn', 'prefer-top-level' ],
  'import/newline-after-import':            [ 'warn', { count: 2 }],
  'import/no-unassigned-import':            [ 'error', { allow: [ '**/*.{le,c,sc,sa}ss' ]}],
  'import/prefer-default-export':           [ 'error' ],
  'import/no-mutable-exports':              [ 'error' ],

  'import/order': [ 'warn', {
    'groups':                  [ 'builtin', 'type', 'external', [ 'parent', 'sibling', 'index' ], 'internal', 'object' ],
    'alphabetize':             { order: 'asc', caseInsensitive: true },
    'distinctGroup':           true,
    'warnOnUnassignedImports': true,
    'newlines-between':        'always',
    'pathGroups':              [
      { group: 'internal', pattern: '**/*.css', position: 'after' },
      { group: 'object', pattern: '**/*.scss' },
      { group: 'parent', pattern: '@/**' },
      { group: 'parent', pattern: '../**' },
      { group: 'sibling', pattern: './**' }]}],
}

export default rules
